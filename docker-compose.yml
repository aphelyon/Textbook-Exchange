models:
    image: tp33/django
    external_links:
      -  mysql:db
    volumes:
      - ./app/textbookexchange:/app
    #ports:
     # - "8001:8000"
    command: bash -c "python manage.py makemigrations myapp && python manage.py makemigrations && python manage.py migrate && python manage.py loaddata dbWithMoreStuff.json && mod_wsgi-express start-server --working-directory . --reload-on-changes ./textbookexchange/wsgi.py"

exp:
    image: tp33/django
    links:
      - models:models-api
      - kafka:kafka
      - es:es
    #ports:
     # - "8002:8000"
    volumes:
      - ./app/experience:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./experience/wsgi.py"

web:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web2:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web3:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web4:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"


web5:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web6:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"


kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka
   
es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - ./app/search:/app
   environment:
      - PYTHONUNBUFFERED=0
   command: bash -c "python search_index.py"

haproxy:
   image: my-haproxy
   links:
     - web:web
     - web2:web2
     - web3:web3
     - web4:web4
     - web5:web5
     - web6:web6
  # volumes:
   #  - /var/run/docker.sock:/var/run/docker.sock
   ports:
     - "80:80"
