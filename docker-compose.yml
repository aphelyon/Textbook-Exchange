models:
    image: tp33/django
    external_links:
      -  mysql:db
    volumes:
      - ./app/textbookexchange:/app
    #ports:
     # - "8001:8000"
    command: bash -c "python manage.py makemigrations myapp && python manage.py makemigrations && python manage.py migrate && python manage.py loaddata dbWithMoreStuff.json && mod_wsgi-express start-server --working-directory . --reload-on-changes ./textbookexchange/wsgi.py"

exp:
    image: tp33/django
    links:
      - models:models-api
      - kafka:kafka
      - es:es
    ports:
      - "8002:8000"
    volumes:
      - ./app/experience:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./experience/wsgi.py"

web:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web2:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web3:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web4:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"


web5:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"

web6:
    image: tp33/django
    links:
      - exp:exp-api
    expose:
      - "8000"
    volumes:
      - ./app/web:/app
    command: bash -c "mod_wsgi-express start-server --working-directory . --reload-on-changes ./web/wsgi.py"


kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka
   
es:
   image: elasticsearch:2.0
   container_name: es
   #ports:
    #  - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   privileged: true
   volumes:
      - ./app/search:/app
   environment:
      - PYTHONUNBUFFERED=0
   command: bash -c "python search_index.py"

spark_batch:
    image: tp33/django
    container_name: spark_batch
    links:
      - kafka:kafka
    volumes:
      - ./app/Spark:/app
      - ./data:/tmp/data
    environment:
      - PYTHONUNBUFFERED=0
    command: bash -c "python spark_index.py"
   
haproxy:
   image: my-haproxy
   links:
     - web:web
     - web2:web2
     - web3:web3
     - web4:web4
     - web5:web5
     - web6:web6
  # volumes:
   #  - /var/run/docker.sock:/var/run/docker.sock
   ports:
     - "80:80"

spark-master:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
  container_name: spark-master
  hostname: spark-master
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./data:/tmp/data

spark-worker:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./data:/tmp/data
